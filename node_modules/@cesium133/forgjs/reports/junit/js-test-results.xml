<testsuites name="jest tests" tests="132" failures="0" time="4.239">
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="2.403" tests="4">
    <testcase classname=" looseEqual object false" name=" looseEqual object false" time="0.006">
    </testcase>
    <testcase classname=" looseEqual object true" name=" looseEqual object true" time="0.001">
    </testcase>
    <testcase classname=" looseEqual object and array fals" name=" looseEqual object and array fals" time="0.001">
    </testcase>
    <testcase classname=" flatten Object" name=" flatten Object" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.09" tests="2">
    <testcase classname=" type rule.getError() returns array of errors when input is wrong" name=" type rule.getError() returns array of errors when input is wrong" time="0.004">
    </testcase>
    <testcase classname=" type rule.getError() call error function (if the error of the rule is function)" name=" type rule.getError() call error function (if the error of the rule is function)" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.083" tests="3">
    <testcase classname=" non valid string boolean" name=" non valid string boolean" time="0.004">
    </testcase>
    <testcase classname=" valid string boolean" name=" valid string boolean" time="0.001">
    </testcase>
    <testcase classname=" string boolean is true" name=" string boolean is true" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.101" tests="4">
    <testcase classname=" type email false" name=" type email false" time="0.055">
    </testcase>
    <testcase classname=" type email" name=" type email" time="0.001">
    </testcase>
    <testcase classname=" type email true" name=" type email true" time="0">
    </testcase>
    <testcase classname=" type user and domain true" name=" type user and domain true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.086" tests="3">
    <testcase classname=" adding a custom rule" name=" adding a custom rule" time="0.005">
    </testcase>
    <testcase classname=" throwing when type not exist" name=" throwing when type not exist" time="0">
    </testcase>
    <testcase classname=" throwing when type is undefined" name=" throwing when type is undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.085" tests="5">
    <testcase classname=" type test not valid string is false" name=" type test not valid string is false" time="0.053">
    </testcase>
    <testcase classname=" valid date" name=" valid date" time="0.001">
    </testcase>
    <testcase classname=" date is after" name=" date is after" time="0.001">
    </testcase>
    <testcase classname=" date is before" name=" date is before" time="0">
    </testcase>
    <testcase classname=" date is equal" name=" date is equal" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.089" tests="2">
    <testcase classname=" boolean returns true if true tested" name=" boolean returns true if true tested" time="0.055">
    </testcase>
    <testcase classname=" boolean returns true if false tested" name=" boolean returns true if false tested" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.087" tests="9">
    <testcase classname=" type test not password is false" name=" type test not password is false" time="0.004">
    </testcase>
    <testcase classname=" number" name=" number" time="0.001">
    </testcase>
    <testcase classname=" uppercase" name=" uppercase" time="0">
    </testcase>
    <testcase classname=" matcesOneOf" name=" matcesOneOf" time="0.001">
    </testcase>
    <testcase classname=" matcesOneOf without mach" name=" matcesOneOf without mach" time="0">
    </testcase>
    <testcase classname=" matchesAllOf" name=" matchesAllOf" time="0">
    </testcase>
    <testcase classname=" matchesAllOf false" name=" matchesAllOf false" time="0">
    </testcase>
    <testcase classname=" specialChars false" name=" specialChars false" time="0.001">
    </testcase>
    <testcase classname=" good password" name=" good password" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.097" tests="9">
    <testcase classname=" type test not number is false" name=" type test not number is false" time="0.004">
    </testcase>
    <testcase classname=" type test int number is false" name=" type test int number is false" time="0.001">
    </testcase>
    <testcase classname=" type test int number is true" name=" type test int number is true" time="0">
    </testcase>
    <testcase classname=" type test max string-number is true" name=" type test max string-number is true" time="0">
    </testcase>
    <testcase classname=" type test max string-number is false" name=" type test max string-number is false" time="0.001">
    </testcase>
    <testcase classname=" type test min string-number is false" name=" type test min string-number is false" time="0">
    </testcase>
    <testcase classname=" type test min string-number is true" name=" type test min string-number is true" time="0">
    </testcase>
    <testcase classname=" type test string-number is equal to 5" name=" type test string-number is equal to 5" time="0.001">
    </testcase>
    <testcase classname=" type test string-number is not equal to 5" name=" type test string-number is not equal to 5" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.084" tests="2">
    <testcase classname=" test getValFromPath returns 5 path is correct" name=" test getValFromPath returns 5 path is correct" time="0.005">
    </testcase>
    <testcase classname=" test travers" name=" test travers" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:01" time="3.155" tests="8">
    <testcase classname=" test the hole object to be true" name=" test the hole object to be true" time="0.049">
    </testcase>
    <testcase classname=" test the hole object to be false extra values" name=" test the hole object to be false extra values" time="0">
    </testcase>
    <testcase classname=" test the hole object to be false" name=" test the hole object to be false" time="0.001">
    </testcase>
    <testcase classname=" test custom" name=" test custom" time="0.001">
    </testcase>
    <testcase classname=" test getErrors must return an array of errors" name=" test getErrors must return an array of errors" time="0.002">
    </testcase>
    <testcase classname=" test getErrors return array of errors even with object as rule error" name=" test getErrors return array of errors even with object as rule error" time="0.001">
    </testcase>
    <testcase classname=" test test over an array of values" name=" test test over an array of values" time="0.001">
    </testcase>
    <testcase classname=" test over multiple values and return -1" name=" test over multiple values and return -1" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:01" time="3.169" tests="9">
    <testcase classname=" type string returns true when a string" name=" type string returns true when a string" time="0.005">
    </testcase>
    <testcase classname=" type string returns false when not string" name=" type string returns false when not string" time="0">
    </testcase>
    <testcase classname=" type string returns true when matches a REGEX" name=" type string returns true when matches a REGEX" time="0.001">
    </testcase>
    <testcase classname=" type string returns false when doesen&apos;t matches a REGEX" name=" type string returns false when doesen&apos;t matches a REGEX" time="0">
    </testcase>
    <testcase classname=" throws error when test doesn&apos;t exist" name=" throws error when test doesn&apos;t exist" time="0">
    </testcase>
    <testcase classname=" type string returns true when string not empty" name=" type string returns true when string not empty" time="0.001">
    </testcase>
    <testcase classname=" type string returns false when string empty" name=" type string returns false when string empty" time="0">
    </testcase>
    <testcase classname=" type string returns true when two strings are equal" name=" type string returns true when two strings are equal" time="0">
    </testcase>
    <testcase classname=" type string returns true when string minLength" name=" type string returns true when string minLength" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.092" tests="5">
    <testcase classname=" type email false" name=" type email false" time="0.055">
    </testcase>
    <testcase classname=" type url false" name=" type url false" time="0.001">
    </testcase>
    <testcase classname=" type url true" name=" type url true" time="0.001">
    </testcase>
    <testcase classname=" type domain true" name=" type domain true" time="0">
    </testcase>
    <testcase classname=" type protocol true" name=" type protocol true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.098" tests="15">
    <testcase classname=" type test not int is false" name=" type test not int is false" time="0.004">
    </testcase>
    <testcase classname=" type test" name=" type test" time="0">
    </testcase>
    <testcase classname=" max is true if &lt; 100" name=" max is true if &lt; 100" time="0">
    </testcase>
    <testcase classname=" max is false if  &gt; 100" name=" max is false if  &gt; 100" time="0.001">
    </testcase>
    <testcase classname=" equal returns true if 100" name=" equal returns true if 100" time="0">
    </testcase>
    <testcase classname=" custom rulle should return true" name=" custom rulle should return true" time="0">
    </testcase>
    <testcase classname=" custom rulle should return false" name=" custom rulle should return false" time="0.001">
    </testcase>
    <testcase classname=" mixng rulles returns true" name=" mixng rulles returns true" time="0">
    </testcase>
    <testcase classname=" mixng rulles returns false" name=" mixng rulles returns false" time="0">
    </testcase>
    <testcase classname=" throws error when test doesn&apos;t exist" name=" throws error when test doesn&apos;t exist" time="0.001">
    </testcase>
    <testcase classname=" returns true if optional set to true and patram undefined" name=" returns true if optional set to true and patram undefined" time="0">
    </testcase>
    <testcase classname=" returns false if optional set to true and patram dont match" name=" returns false if optional set to true and patram dont match" time="0.001">
    </testcase>
    <testcase classname=" returns true if optional set to true and patram match" name=" returns true if optional set to true and patram match" time="0">
    </testcase>
    <testcase classname=" returns true if optional set to false and patram match" name=" returns true if optional set to false and patram match" time="0">
    </testcase>
    <testcase classname=" returns false if optional set to false and patram dont match" name=" returns false if optional set to false and patram dont match" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.108" tests="4">
    <testcase classname=" returns true if int or float or number" name=" returns true if int or float or number" time="0.056">
    </testcase>
    <testcase classname=" reterns false if not int or float" name=" reterns false if not int or float" time="0.001">
    </testcase>
    <testcase classname=" reterns false if not (int and number)" name=" reterns false if not (int and number)" time="0">
    </testcase>
    <testcase classname=" reterns true if int and number" name=" reterns true if int and number" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.084" tests="9">
    <testcase classname=" type test not number is false" name=" type test not number is false" time="0.054">
    </testcase>
    <testcase classname=" type test float number is false" name=" type test float number is false" time="0.001">
    </testcase>
    <testcase classname=" type test float number is true" name=" type test float number is true" time="0.001">
    </testcase>
    <testcase classname=" type test max string-number is true" name=" type test max string-number is true" time="0">
    </testcase>
    <testcase classname=" type test max string-number is false" name=" type test max string-number is false" time="0.001">
    </testcase>
    <testcase classname=" type test min string-number is false" name=" type test min string-number is false" time="0">
    </testcase>
    <testcase classname=" type test min string-number is true" name=" type test min string-number is true" time="0.001">
    </testcase>
    <testcase classname=" type test string-number is equal to 5" name=" type test string-number is equal to 5" time="0">
    </testcase>
    <testcase classname=" type test string-number is not equal to 5" name=" type test string-number is not equal to 5" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.093" tests="7">
    <testcase classname=" type float returns true when float" name=" type float returns true when float" time="0.006">
    </testcase>
    <testcase classname=" type float returns false when int" name=" type float returns false when int" time="0.001">
    </testcase>
    <testcase classname=" type float returns true when bigger than 100" name=" type float returns true when bigger than 100" time="0.001">
    </testcase>
    <testcase classname=" type float returns true when smaller than 100" name=" type float returns true when smaller than 100" time="0">
    </testcase>
    <testcase classname=" type float returns true when two floats are equal" name=" type float returns true when two floats are equal" time="0.001">
    </testcase>
    <testcase classname=" type float returns true when is one of array" name=" type float returns true when is one of array" time="0">
    </testcase>
    <testcase classname=" type float returns false when is not one of array" name=" type float returns false when is not one of array" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.097" tests="15">
    <testcase classname=" type test not number is false" name=" type test not number is false" time="0.052">
    </testcase>
    <testcase classname=" type test" name=" type test" time="0.001">
    </testcase>
    <testcase classname=" max is true if &lt; 100" name=" max is true if &lt; 100" time="0">
    </testcase>
    <testcase classname=" max is false if  &gt; 100" name=" max is false if  &gt; 100" time="0.001">
    </testcase>
    <testcase classname=" equal returns true if 100" name=" equal returns true if 100" time="0">
    </testcase>
    <testcase classname=" custom rulle should return true" name=" custom rulle should return true" time="0.001">
    </testcase>
    <testcase classname=" custom rulle should return false" name=" custom rulle should return false" time="0">
    </testcase>
    <testcase classname=" mixng rulles returns true" name=" mixng rulles returns true" time="0.001">
    </testcase>
    <testcase classname=" mixng rulles returns false" name=" mixng rulles returns false" time="0">
    </testcase>
    <testcase classname=" throws error when test doesn&apos;t exist" name=" throws error when test doesn&apos;t exist" time="0.001">
    </testcase>
    <testcase classname=" returns true if optional set to true and patram undefined" name=" returns true if optional set to true and patram undefined" time="0.001">
    </testcase>
    <testcase classname=" returns false if optional set to true and patram dont match" name=" returns false if optional set to true and patram dont match" time="0">
    </testcase>
    <testcase classname=" returns true if optional set to true and patram match" name=" returns true if optional set to true and patram match" time="0.001">
    </testcase>
    <testcase classname=" returns true if optional set to false and patram match" name=" returns true if optional set to false and patram match" time="0">
    </testcase>
    <testcase classname=" returns false if optional set to false and patram dont match" name=" returns false if optional set to false and patram dont match" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.103" tests="7">
    <testcase classname=" returns true when its an array" name=" returns true when its an array" time="0.007">
    </testcase>
    <testcase classname=" returns true when aray is not empty" name=" returns true when aray is not empty" time="0.001">
    </testcase>
    <testcase classname=" returns true when all elems verify the rule" name=" returns true when all elems verify the rule" time="0.001">
    </testcase>
    <testcase classname=" returns true when array contains 3 elems" name=" returns true when array contains 3 elems" time="0">
    </testcase>
    <testcase classname=" returns false when array contains elements that dont match" name=" returns false when array contains elements that dont match" time="0.001">
    </testcase>
    <testcase classname=" returns true when elements verify the validator" name=" returns true when elements verify the validator" time="0.001">
    </testcase>
    <testcase classname=" returns true when array is one of validator" name=" returns true when array is one of validator" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.12" tests="3">
    <testcase classname=" returns true if function" name=" returns true if function" time="0.006">
    </testcase>
    <testcase classname=" returns true if function result matches a Rule" name=" returns true if function result matches a Rule" time="0.001">
    </testcase>
    <testcase classname=" returns false if function result doesn&apos;t match a Rule" name=" returns false if function result doesn&apos;t match a Rule" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-01-07T12:28:02" time="3.107" tests="7">
    <testcase classname=" throws error when test doesn&apos;t exist" name=" throws error when test doesn&apos;t exist" time="0.006">
    </testcase>
    <testcase classname=" returns false when not date" name=" returns false when not date" time="0.002">
    </testcase>
    <testcase classname=" returns true when date is after a specific date" name=" returns true when date is after a specific date" time="0.001">
    </testcase>
    <testcase classname=" returns true when date is before a specific date" name=" returns true when date is before a specific date" time="0">
    </testcase>
    <testcase classname=" returns true when date is between two dates" name=" returns true when date is between two dates" time="0.001">
    </testcase>
    <testcase classname=" returns true when two dates are equal" name=" returns true when two dates are equal" time="0">
    </testcase>
    <testcase classname=" returns true when date is one of array" name=" returns true when date is one of array" time="0.001">
    </testcase>
  </testsuite>
</testsuites>